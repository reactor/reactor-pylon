/*
 * Copyright (c) 2011-2016 Pivotal Software Inc, All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
	maven { url "http://repo.spring.io/plugins-release" }
  }
  dependencies {
	classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7',
			'io.spring.gradle:spring-io-plugin:0.0.4.RELEASE'
  }
}
plugins {
  id 'java' // or 'groovy' Must be explicitly applied
  id 'com.github.johnrengelman.shadow' version '1.2.2'
}

description = 'Reactor Monitoring Client'

ext {
  gradleVersion = '2.8'
  gradleScriptDir = "gradle"

  // Languages
  groovyVersion = '2.4.1'

  // Logging
  slf4jVersion = '1.7.12'
  logbackVersion = '1.1.2'

  // Libraries
  nettyVersion = '4.0.31.Final'
  jacksonDatabindVersion = '2.5.1'
  reactorVersion = version

  // Testing
  spockVersion = '1.0-groovy-2.4'

  javadocLinks = ["http://docs.oracle.com/javase/7/docs/api/",
				  "http://docs.oracle.com/javaee/6/api/",
				  "http://fasterxml.github.io/jackson-databind/javadoc/2.5/",
				  "http://www.reactive-streams.org/reactive-streams-1.0.0-javadoc/"] as String[]
}

println gradleScriptDir

apply from: "$gradleScriptDir/setup.gradle"

configurations.all {
  // check for updates every build
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

group = 'io.projectreactor'

apply from: "${gradleScriptDir}/ide.gradle"
apply plugin: 'propdeps'
apply plugin: 'groovy'


jar {
  manifest {
	attributes 'Main-Class': "reactor.nexus.pylon.Pylon"
  }
}

[compileJava, compileTestJava]*.options*.compilerArgs = ["-Xlint:varargs",
														 "-Xlint:cast",
														 "-Xlint:classfile",
														 "-Xlint:dep-ann",
														 "-Xlint:divzero",
														 "-Xlint:empty",
														 "-Xlint:finally",
														 "-Xlint:overrides",
														 "-Xlint:path",
														 "-Xlint:processing",
														 "-Xlint:static",
														 "-Xlint:try",
														 "-Xlint:deprecation",
														 "-Xlint:unchecked",
														 "-Xlint:-serial",      // intentionally disabled
														 "-Xlint:-options",     // intentionally disabled
														 "-Xlint:-fallthrough", // intentionally disabled
														 "-Xlint:-rawtypes"     // TODO enable and fix warnings
]

compileJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}

compileTestJava {
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
}

  compileTestJava.options.compilerArgs += "-parameters"
  tasks.withType(Javadoc) {
	options.addStringOption('Xdoclint:none', '-quiet')
}

sourceSets.test.resources.srcDirs = ["src/test/resources", "src/test/java"]

configurations.all {
  exclude group: 'commons-logging', module: 'commons-logging'
}

project.tasks.withType(Test).all {
  systemProperty("java.awt.headless", "true")
  systemProperty("reactor.trace.cancel", "true")
  systemProperty("reactor.trace.nocapacity", "true")
  systemProperty("testGroups", project.properties.get("testGroups"))
  scanForTestClasses = false
  include '**/*Tests.*'
  include '**/*Spec.*'
  exclude '**/*Abstract*.*'
}

repositories {
  mavenLocal()
  maven { url 'http://repo.spring.io/libs-snapshot' }
  maven { url 'http://repo.spring.io/libs-milestone' }
  maven { url "https://oss.sonatype.org/content/repositories/releases/" }
  jcenter()
  mavenCentral()
}

// dependencies that are common across all java projects
dependencies {
  compile "io.projectreactor:reactor-net:$reactorVersion"
  compile "io.netty:netty-all:$nettyVersion"
  compile "org.slf4j:slf4j-api:$slf4jVersion"

  testCompile "io.projectreactor:reactor-stream:$reactorVersion"
  testCompile "io.projectreactor:reactor-bus:$reactorVersion"
  testCompile "io.projectreactor:reactor-aeron:$reactorVersion"

  // JSR-305 annotations
  optional "com.google.code.findbugs:jsr305:3.0.0"

  // Logging
  optional "org.slf4j:slf4j-api:$slf4jVersion"

  optional "ch.qos.logback:logback-classic:$logbackVersion"
  // Testing
  testCompile "org.codehaus.groovy:groovy:$groovyVersion",
		  "org.spockframework:spock-core:$spockVersion",
		  "org.hamcrest:hamcrest-library:1.3",
		  "org.testng:testng:6.8.5"
}


if (project.hasProperty('platformVersion')) {
  apply plugin: 'spring-io'

  repositories {
	maven { url 'http://repo.spring.io/libs-snapshot' }
  }

  dependencyManagement {
	springIoTestRuntime {
	  imports {
		mavenBom "io.spring.platform:platform-bom:$platformVersion"
	  }
	}
  }
}